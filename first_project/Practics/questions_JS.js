/*

---------------------------------------------------------------------------------------------


 Почему JavaScript называют свободно типизированным или динамическим языком?


 JavaScript называется свободно типизированным или динамическим языком, потому что переменные JavaScript не связаны напрямую с каким-либо типом значения, и любой переменной можно присваивать и переназначать значения всех типов.


---------------------------------------------------------------------------------------------
 В чем разница между var, letи const?

 var могут быть переобъявлены и обновлены.
 let может быть обновлен, но не объявлен
 const не может быть обновлен или переобъявлен.

---------------------------------------------------------------------------------------------


 В чем отличие null и undefined?

 NULLявляется значением присваивания. Его можно присвоить переменной как представление без значения.
 undefinedозначает, что переменная была объявлена, но ей еще не присвоено значение


---------------------------------------------------------------------------------------------


 Для чего используется typeof оператор?

 typeof оператор возвращает строку, указывающую тип операнда.

---------------------------------------------------------------------------------------------


 Как проверить, является ли объект массивом?

     isArray()Функция определяет, является ли объект массивом.

---------------------------------------------------------------------------------------------


 Что такое Call back функция?

 это функция, которая передается в другую функцию в качестве параметра

---------------------------------------------------------------------------------------------


 Что такое модули ES6?

     Они организуют связанный набор кода JavaScript. Модуль может содержать переменные и функции. Модуль — это не что иное, как фрагмент кода JavaScript, записанный в файле.


---------------------------------------------------------------------------------------------


 Назовите два разных экспорта ES6.
     Экспорт по умолчанию(default) используется, когда модулю нужно экспортировать только одно значение.
     Именованные экспорты отличаются своими именами. В модуле может быть несколько именованных экспортов.

---------------------------------------------------------------------------------------------


 Логические операторы


---------------------------------------------------------------------------------------------

 Особенности оператора &&


---------------------------------------------------------------------------------------------

 Различие операторов сравнения


---------------------------------------------------------------------------------------------

 Какие есть falsy значения?


---------------------------------------------------------------------------------------------

 Какие ты знаешь типы функций?


---------------------------------------------------------------------------------------------

 Зачем нам нужны стрелочные функции?


---------------------------------------------------------------------------------------------

 Как появляется контекст у функции?


---------------------------------------------------------------------------------------------

 Чем отличается синхронный код от асинхронного?


---------------------------------------------------------------------------------------------

 Мутабельные и имутабельные типы данных


---------------------------------------------------------------------------------------------

 Операторы сравнения



---------------------------------------------------------------------------------------------

 Что такое контекст в функции?



---------------------------------------------------------------------------------------------

 Отличие синхронного от асинхронного кода



---------------------------------------------------------------------------------------------

 Изучал ли браузерный js



---------------------------------------------------------------------------------------------

 Опыт работы с анимациями


---------------------------------------------------------------------------------------------

 Что такое тернарный оператор



---------------------------------------------------------------------------------------------

 Разница между Array.forEach и Array.map



---------------------------------------------------------------------------------------------

 Про псевдомассив arguments



---------------------------------------------------------------------------------------------

 Про typeof function


---------------------------------------------------------------------------------------------

 Как проверить что в переменной массив


---------------------------------------------------------------------------------------------

 Про parseFloat


---------------------------------------------------------------------------------------------

 Про Array.indexOf


---------------------------------------------------------------------------------------------

 Про Array.includes


---------------------------------------------------------------------------------------------

 Про onClick


---------------------------------------------------------------------------------------------

 Как удалить eventListener


---------------------------------------------------------------------------------------------

 Как передвигаться впередназад по истории


---------------------------------------------------------------------------------------------

 Как получить текущий URL страницы


---------------------------------------------------------------------------------------------

 Как средиректить пользователя на URL


---------------------------------------------------------------------------------------------

 В чем разница между spread и rest операторами


---------------------------------------------------------------------------------------------

 Про rest оператор


---------------------------------------------------------------------------------------------

 Что такое деструктуризация


---------------------------------------------------------------------------------------------

 Для чего нужен Promose.all


---------------------------------------------------------------------------------------------

 Задача про счастливые числа


---------------------------------------------------------------------------------------------

 Задача про url параметры


---------------------------------------------------------------------------------------------

 Как поставить cookie в браузере


---------------------------------------------------------------------------------------------

 Как проверить, что переменная NaN


---------------------------------------------------------------------------------------------

 Как проверить, что число целое



---------------------------------------------------------------------------------------------

 Разница между function declaration и function expression



---------------------------------------------------------------------------------------------

 Как поменять значения двух переменных местами



---------------------------------------------------------------------------------------------


 Разница между == и ===

 «==» используется для сравнения двух значений независимо от типа данных переменной. т.е. производится неявное приведение типов.
 «===» используется для сравнения двух значений, но это будет строгая проверка, поэтому будет проверяться соответствие значения и типа данных. Производится сравнение без приведения типов.

---------------------------------------------------------------------------------------------


 Как проверить, является ли значение числом?
     isNaN()Функция определяет, является ли значение не числом.
     Если вы используете isNaN(), вам придется выполнить дополнительные проверки , как вы можете видеть из приведенных ниже примеров.


---------------------------------------------------------------------------------------------


 Как преобразовать строку в int?

     parseInt()преобразует строку в целое число
 parseInt("30", 10)  30
 parseInt("55px", 10)  50
 parseInt(2.55, 10)  2
 parseFloat()преобразует строку в число точек (с десятичным числом)
 Пример:
     parseFloat("30")  30
 parseFloat("55px")  50
 parseFloat(2.55)  2.55
 Вы также можете принять
 Number()преобразует строку в число. Это может быть целое число или число точек. Они часто могут быть менее безопасными, чем использование parseIntилиparseFloat

---------------------------------------------------------------------------------------------


 Назовите различные циклы в JavaScript

 for- перебирает блок кода несколько раз
 forin- перебирает свойства объекта
 forof- перебирает значения итерируемого объекта
 while- перебирает блок кода, пока заданное условие истинно
 dowhile- также перебирает блок кода, пока заданное условие выполняется


---------------------------------------------------------------------------------------------

 Разница между slice и splice



---------------------------------------------------------------------------------------------

 Как отсортировать массив чисел по возрастанию



---------------------------------------------------------------------------------------------

 Переписать конструктор на ES6 синтаксис



---------------------------------------------------------------------------------------------

 Как узнать, что объект пустой



---------------------------------------------------------------------------------------------

 Сделать первую букву строки заглавной



---------------------------------------------------------------------------------------------

 Что делает метов freeze



---------------------------------------------------------------------------------------------

 Как инвертировать порядок элементов массива



---------------------------------------------------------------------------------------------

 Найти max и min значения в массиве



---------------------------------------------------------------------------------------------

 Spread оператор со строкой



---------------------------------------------------------------------------------------------

 Получить символ из строки по index



---------------------------------------------------------------------------------------------

 Как получить массив уникальных элементов



---------------------------------------------------------------------------------------------

 Как очистить массив от всех элементов



---------------------------------------------------------------------------------------------

 Как отсортировать в массиве только нечетные числа



---------------------------------------------------------------------------------------------

 Как удалить обработчик события


---------------------------------------------------------------------------------------------

 Про return из функции



---------------------------------------------------------------------------------------------

 Про изменение ссылки на объект



---------------------------------------------------------------------------------------------

 Пересечение массивов (простой вариант задачи)



---------------------------------------------------------------------------------------------

 Какие бывают  состояния у Promise



---------------------------------------------------------------------------------------------
Какие преимущества и недостатки при использовании промисов вместо колбэков (callbacks)?



---------------------------------------------------------------------------------------------

 Задача про var и setTimeout



---------------------------------------------------------------------------------------------

 Разница между Object.getOwnPropertyNames и Object.keys



---------------------------------------------------------------------------------------------

 При клике на кнопку нужно удалить кнопку и отрисовать 2 новых



---------------------------------------------------------------------------------------------

 Про arrow function и обработчик события



---------------------------------------------------------------------------------------------

 Чем отличаются PUT и POST запросы



---------------------------------------------------------------------------------------------

 Для чего нужен package-lock.json



---------------------------------------------------------------------------------------------

 Что такое staging area в git



---------------------------------------------------------------------------------------------

 В чем разница между merge и rebase



---------------------------------------------------------------------------------------------

 Какие pet project’ы делала



---------------------------------------------------------------------------------------------

 Подключении скриптов через script



---------------------------------------------------------------------------------------------

 Что такое всплытие событий(event bubbling)



---------------------------------------------------------------------------------------------

 stopPropagationpreventDefault



---------------------------------------------------------------------------------------------

 Какие типы данных есть в JS



---------------------------------------------------------------------------------------------

 Способы итерации по массивам



---------------------------------------------------------------------------------------------

 Разница между for и froEach



---------------------------------------------------------------------------------------------

 Чем forEach отличается от map



---------------------------------------------------------------------------------------------

 Метод reduce



---------------------------------------------------------------------------------------------

 delete элемента массива



---------------------------------------------------------------------------------------------

 Разница между Func() и new Func()



---------------------------------------------------------------------------------------------

 Как скопировать простой объект



---------------------------------------------------------------------------------------------

 Изоморфная функция добавления



---------------------------------------------------------------------------------------------

 Функция возвращающая расширение файла



---------------------------------------------------------------------------------------------

 Способы уменьшения времени загрузки страницы




---------------------------------------------------------------------------------------------

 В чем плюсы SSR



---------------------------------------------------------------------------------------------

 Способы уменьшения времени загрузки страницы



---------------------------------------------------------------------------------------------

 HTTP заголовки кеширования



---------------------------------------------------------------------------------------------

 Cookies



---------------------------------------------------------------------------------------------

 Security поля в cookie



---------------------------------------------------------------------------------------------

 Про схлопывание отступов



---------------------------------------------------------------------------------------------

 Про inline-block и проблему с пробелами



---------------------------------------------------------------------------------------------

 Что такое this в JS



---------------------------------------------------------------------------------------------

 use strict и this



---------------------------------------------------------------------------------------------

 Разница между null и undefined



---------------------------------------------------------------------------------------------

 Как проверить что объект это массив



---------------------------------------------------------------------------------------------

 Про логические операторы && и ||



---------------------------------------------------------------------------------------------

 Разница меджу function expression и function declaration



---------------------------------------------------------------------------------------------

 IIFE



---------------------------------------------------------------------------------------------

 Про делегирование событий



---------------------------------------------------------------------------------------------

 Передача значений по ссылке



---------------------------------------------------------------------------------------------

 Метод filter и остаток от деления



---------------------------------------------------------------------------------------------

 Унарный оператор инкремента



---------------------------------------------------------------------------------------------

 Числа с плавающей точкой



---------------------------------------------------------------------------------------------

 Сравнение объектов



---------------------------------------------------------------------------------------------

 bind, call и apply



---------------------------------------------------------------------------------------------

 Скоуп переменных



---------------------------------------------------------------------------------------------

 Какие у нас существуют функции в JS?



---------------------------------------------------------------------------------------------

 В чем разница между function expression и function declaration?



---------------------------------------------------------------------------------------------

 Откуда берется контекст у функции?



---------------------------------------------------------------------------------------------

 Что такое чистая функция?



---------------------------------------------------------------------------------------------

 Как мы можем изменить контекст у функции?



---------------------------------------------------------------------------------------------

 Что такое eval и почему его следует избегать?



---------------------------------------------------------------------------------------------

 Чем область видимости отличается от контекста?



---------------------------------------------------------------------------------------------

 Что такое замыкание?



---------------------------------------------------------------------------------------------

 Как работают модули в ES modules?



---------------------------------------------------------------------------------------------

 Можем ли мы поменять переменную в модуле извне?



---------------------------------------------------------------------------------------------

 Как мы можем эмулировать модули не используя ES modulesrequire?



---------------------------------------------------------------------------------------------

 Откуда берется свойство length у массива?



---------------------------------------------------------------------------------------------


 Чем отличаются PUT- и POST-запросы?

     PUT-запросы приводят к замене целевого ресурса на данные, передаваемые в запросе. Его можно использовать для обновления содержимого существующего ресурса или для создания нового ресурса.

     POST-запросы приводят к специфической для ресурса обработке данных, передаваемых в запросе. Их можно использовать для выполнения различных действий. В том числе — для создания новых ресурсов, для выгрузки файлов на сервер, для отправки форм.

     Ещё одно отличие между PUT- и POST-запросами заключается в том, что PUT-запросы являются идемпотентными, а POST-запросы — нет. То есть — если запрос, в котором передаются одни и те же данные, и который выполняется по одному и тому же URL, будет выполнен несколько раз, это равносильно однократному выполнению этого запроса. Многократное выполнение POST-запроса не эквивалентно его однократному выполнению. То есть — несколько таких запросов, например, могут привести к созданию нескольких объектов на сервере.

---------------------------------------------------------------------------------------------


 Объясните, что такое файлы cookie в JavaScript
 С помощью этого вопроса интервьюер оценивает ваши базовые знания в веб-разработке.

     Ответ: Cookies – это небольшие текстовые файлы, которые хранятся на компьютере и создаются, когда пользователь заходит на веб-сайты. Например, это могут быть сведения о пользователе или информация о содержимом корзины покупок из прошлых посещений.


---------------------------------------------------------------------------------------------


 Чем отличаются cookie, sessionStorage и localStorage?

     localStorage, как можно понять из его названия, это место, которое браузеры могут использовать для локального хранения данных. В нём может храниться до 10 Мб данных. sessionStorage — это разновидность локального хранилища, которое привязано к сессии и удаляется после её завершения. В сессионном хранилище может храниться до 5 Мб данных.

     Куки-файлы используются для хранения небольших объёмов данных, не превышающих 4 Кб. Ими может пользоваться браузер, их может запрашивать у браузера сервер.

---------------------------------------------------------------------------------------------


 Что такое CORS?

     CORS (Cross-Origin Resource Sharing, совместное использование ресурсов между разными источниками) — это браузерный механизм, который позволяет предоставлять страницам доступ к ресурсам, расположенным за пределами некоего домена. Это расширяет возможности страниц и добавляет гибкости политике одинакового источника (same-origin policy).

---------------------------------------------------------------------------------------------


 Что такое промис?

     Промисы — это объекты, которые используются в JavaScript при выполнении асинхронных операций. Они упрощают работу с асинхронными операциями и дают более удобные механизмы обработки ошибок, чем коллбэки и события.

---------------------------------------------------------------------------------------------


 В каких состояниях может пребывать промис?

     Промис может пребывать в одном из трёх состояний:

     Исполнено (fulfilled) — операция, связанная с промисом, завершена успешно.
 Отклонено (rejected) — операция, связанная с промисом, завершена с ошибкой.
 Ожидание (pending) — промис находится в состоянии ожидания, то есть, о нём нельзя сказать, что он завершён успешно или с ошибкой.


---------------------------------------------------------------------------------------------


 Что такое поднятие переменных и функций в JavaScript (hoisting)?

     Поднятие переменных и функций (hoisting) — это перемещение их объявлений в верхнюю часть их области видимости (глобальной области видимости или области видимости функции).

---------------------------------------------------------------------------------------------


 Какие значения в JavaScript являются ложными?

     В JavaScript ложными являются значения, которые, при преобразовании их к логическому типу, становятся значениями false. Это — следующие значения:

     ''
 0
 null
 undefined
 NaN
 false
 -0
 0n  значения типа BigInt, при преобразовании их к логическому типу, ведут себя так же, как значения типа Number


---------------------------------------------------------------------------------------------


 Объясните стрелочные функции
 Ответ: Стрелочная функция – это краткий способ записи функциональных выражений.

     Стрелочные функции не являются конструкторами, не поддерживают ключевые слова this, arguments, super и new.target


---------------------------------------------------------------------------------------------


 Объясните NaN и его роль
 Когда интервьюер просит дать определение термину, этот термин, как правило, является широко используемым. В этом случае, термин NaN, который означает «не число» – важная концепция, понимание которой, потребуется разработчикам на JavaScript при работе с числовыми значениями.

     Ответ: Когда значение в операции не число, оно возвращает NaN. Это может произойти в нескольких случаях. Например, если операция возвращает неподходящий результат, потому что часть функции была нечисловой или результат имеет значение, не являющееся числовым.


---------------------------------------------------------------------------------------------


 Что такое примитивные типы данных в JavaScript?
     Такой вопрос обычно оценивает ваши теоретические знания JavaScript. При ответе на этот вопрос рассмотрите возможность краткого перечисления всех примитивных типов данных, доступных в JavaScript.

     Ответ: Фундаментальный тип данных, который не может быть создан от других типов данных. Он ограничен представлением одного значения. Все примитивы неизменяемы (immutable), не являются объектом и не имеют методов. По определению, все примитивы – встроенные типы данных, и компилятор должен знать их. Но не все встроенные типы данных – примитивы. В JavaScript доступно семь примитивных типов данных: undefined, null, boolean, string, number, bigint, symbol. Все остальное в JavaScript является объектом.


---------------------------------------------------------------------------------------------


 Как рассчитать числа Фибоначчи в JavaScript?
     Создать последовательность чисел Фибоначчи – очень популярная задача для программистов. Попробуйте правильно ответить на него с помощью кода.

     Ответ: Последовательность чисел Фибоначчи – это последовательность чисел, где каждое значение – это сумма двух предыдущих, начинается с 0 и 1. Первые пять значений это 0, 1, 1, 2, 3, 5, 8.


---------------------------------------------------------------------------------------------


 Как динамически добавлять и удалять свойства в JavaScript?
     Ответ: Вы можете добавить свойство к объекту используя, object.property_name = value, и удалить свойство, используя delete.

---------------------------------------------------------------------------------------------


 Объясните различие между Object.freeze() и const
     Ответ: const и Object.freeze – две разные фичи JavaScript. const применяется только для неизменяемой ссылки на ячейку памяти со значением, что означает невозможность задать новое значение для переменной.
     Object.freeze работает со значениями объектов. Делает объект неизменяемым, то есть изменить его свойства невозможно.

---------------------------------------------------------------------------------------------


 Для чего используются операторы break и continue в JavaScript?
     Эти два термина относятся к циклам. Попробуйте объяснить, как операторы break и continue влияют на цикл.

     Ответ: Оператор break выходит из запущенного цикла в то время как, оператор continue продолжает работу после прерывания всего одной итерации. Оба оператора позволяют написать сложную циклическую функцию с различными результатами и требуемыми действиями на основе заданного результата функции.

---------------------------------------------------------------------------------------------


 Зачем оборачивать содержимое исходного JS-файла в блок функции?
     Ответ на этот вопрос может показать ваши знания вспомогательных процессов, которые, скорее всего, специфичны для библиотеки.

     Ответ: Этот метод заключает в себя содержимое файла, создавая приватное пространство имен. Такая реализация позволяет избежать конфликта между объектами JavaScript и библиотеками, в которых они размещены.

---------------------------------------------------------------------------------------------


 Каковы преимущества и недостатки монолитной и микросервисной архитектуры?
     Интервьюер, вероятно, хочет увидеть, понимаете ли вы различия между ними и достаточно ли осведомлены о них, чтобы определить наиболее практичный подход в любой конкретной ситуации.

     Ответ: Монолитные архитектуры обычно реализуются как приложение в виде единого компонента, что упрощает добавление задач, связанных со сквозной функциональностью (англ. сross-cutting concern), таких как: ограничение запросов, ведение журнала и различные функции безопасности. То есть к сквозной относится «вспомогательная» функциональность модуля, не относящаяся напрямую к выполняемой задаче, но необходимая. Поначалу такая архитектура может показаться более практичной, но по мере развития приложения становится все труднее поддерживать код или масштабировать его.

     Стоит принимать во внимание, что микросервисы будут иметь широкий круг задач, связанных со сквозной функциональностью, которые не предполагались на этапе проектирования. В долгосрочной перспективе они, как правило, предпочтительнее из-за их автономной организации, что позволяет легко реструктурировать их по мере расширения или изменения их назначения.

---------------------------------------------------------------------------------------------
Расскажите, как работает прототипное наследование.



---------------------------------------------------------------------------------------------
Что вы думаете о AMD против CommonJS?


---------------------------------------------------------------------------------------------
В каких случаях обычно используются анонимные функции?



---------------------------------------------------------------------------------------------
Как вы организуете свой код? (module pattern, classical inheritance)



---------------------------------------------------------------------------------------------
В чем разница между host-объектами и нативными объектами?



---------------------------------------------------------------------------------------------
В чем разница между feature detection (определение возможностей браузера), feature inference (предположение возможностей) и анализом строки user-agent?


---------------------------------------------------------------------------------------------
Расскажите об Ajax как можно более подробно.



---------------------------------------------------------------------------------------------
Какие преимущества и недостатки в использовании Ajax?



---------------------------------------------------------------------------------------------
Объясните, как работает JSONP (и почему это не совсем AJAX).



---------------------------------------------------------------------------------------------
Вы когда-нибудь использовали шаблонизацию на JavaScript?
Если да, то какие библиотеки вы использовали?


---------------------------------------------------------------------------------------------
В чём разница между «атрибутом» (attribute) и «свойством« (property)?




---------------------------------------------------------------------------------------------
Почему не следует расширять нативные JavaScript-объекты?



---------------------------------------------------------------------------------------------
В чём разница между событием document load и событием document DOMContentLoaded?



---------------------------------------------------------------------------------------------
Объясните same-origin policy в контексте JavaScript.



---------------------------------------------------------------------------------------------
Почему считается хорошим тоном оставить глобальную область видимости (global scope) в нетронутом состоянии?


---------------------------------------------------------------------------------------------
Для чего используют событие load? Есть ли у этого события недостатки? Знаете ли вы какие-либо альтернативы, и в каких случаях бы стали их использовать?


---------------------------------------------------------------------------------------------
Расскажите, что такое одностраничное приложение, и как сделать его SEO-оптимизированным.



---------------------------------------------------------------------------------------------
Каковы преимущества и недостатки написания JavaScript-кода на языке, который компилируется в JavaScript?



---------------------------------------------------------------------------------------------
Какие инструменты и методы вы используете при отладке кода?



---------------------------------------------------------------------------------------------
Какие языковые конструкции вы используете для итерации по свойствам объекта и элементам массива?



---------------------------------------------------------------------------------------------
Объясните разницу между изменяемыми (mutable) и неизменяемыми (immutable) объектами.
Приведите пример неизменяемого объекта в JavaScript.
Какие преимущества и недостатки у неизменяемости?
Как вы можете достигнуть неизменяемости в вашем коде?



---------------------------------------------------------------------------------------------
Что такое цикл событий (event loop)?
В чём разница между стеком вызовов (call stack) и очередью событий (task queue)?




---------------------------------------------------------------------------------------------
В чём разница между классом в ES6 и функцией-конструктором в ES5?



---------------------------------------------------------------------------------------------
Дайте определение функции высшего порядка.



---------------------------------------------------------------------------------------------
Каким образом можно обмениваться кодом между файлами?




---------------------------------------------------------------------------------------------
Для чего используются статические члены класса?



---------------------------------------------------------------------------------------------


*/