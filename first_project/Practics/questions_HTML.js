/*

------------------------------------------------------------------------------------
    Что такое HTML?

HTML расшифровывается как HyperText Markup Language (язык гипертекстовой разметки). Это язык разметки документов во Всемирной паутине (World Wide Web, WWW). HTML — это стандартизированный язык, позволяющий составлять форматированный текст. Браузер интерпретирует его и отображает на экране элементы веб-страниц.


Из чего состоит форматированный текст HTML?

В первую очередь, HTML — это контент и теги. Теги позволяют задать способ отображения контента на веб-страницах.

------------------------------------------------------------------------------------
     Что такое HTML-тег?
    
Тег — это специальное служебное слово, заключенное в угловые скобки. Его ещё называют «элемент HTML».
Тегов в языке HTML много и каждый что-то делает с контентом, который обычно находится внутри скобок или между тегами.
Если тег парный, то тегу <ТЕГ> соответствует <ТЕГ>.

------------------------------------------------------------------------------------
    
    Парными являются все теги?
    
Нет, не все. Существуют одиночные теги, например, <img> — для изображений.
В этом случае контент вместе с другими служебными словами (например, для <img> это может быть src=”url изображения”) размещается между скобками, но после слова img.
    
------------------------------------------------------------------------------------
    
    Какие основные виды списков применяют при создании веб-страницы?
    
При создании веб-страницы можно использовать:

Menu list (список меню — <menu>).
Directory list (список директорий — <dir>).
Ordered list (нумерованный список — <ol>).
Unordered list (маркированный список — <ul>).
Definition list (список определений — <dl>).

------------------------------------------------------------------------------------
    
    Сколько нужно тегов чтобы собрать html страницу?
    
В спецификации HTML5 некоторые правила разметки были ослаблены.
В частности, использование элементов <html>, <head> и <body> уже не является обязательным для разметки HTML5
    
    
------------------------------------------------------------------------------------
    
    Как мы можем структурировать html страницу?

    Создавать иерархическую структуру
    
В своём HTML-коде вы можете размечать разделы содержимого сайта на основе их функциональности — использовать элементы, которые представляют разделы контента, описанные выше,
а вспомогательные технологии, такие как программы чтения с экрана, смогут распознавать эти элементы и помогать в таких задачах, как "найти основную навигацию" или "найти основное содержимое"


------------------------------------------------------------------------------------
    
    
    Можем ли мы использовать h1 несколько раз на странице?
    
Ранее было предпочтительно использовать <h1> только один раз на странице — это заголовок самого верхнего уровня, и все остальные заголовки располагаются ниже его в иерархии.

Новые правила использования HTML5 <h1>
Используйте один набор <h1> тегов для каждого корневого раздела или раздела содержимого.
Между <h1> открывающим <body> тегом и первым разделом содержимого всегда должен быть заголовок уровня для обозначения всего документа.
Когда <h1> заголовок уровня должен использоваться для обозначения раздела содержимого, он должен быть первым заголовком, который появляется в разделе, потому что первый заголовок всегда интерпретируется как метка раздела.
Если <h1> заголовок уровня используется для обозначения раздела содержимого, любые другие заголовки, используемые в этом разделе, должны быть H2 или ниже, чтобы создать точную структуру документа.
------------------------------------------------------------------------------------
    
    
    Как проверить правильную иерархию html заголовков?
    
Заголовки могут быть вложены в подразделы, чтобы отразить организацию содержимого страницы. Большинство программ чтения с экрана также могут создавать упорядоченный список всех заголовков на странице, что может помочь человеку быстро определить иерархию содержимого:

h1 Жуки
    h2 Этимология
    h2 Распределение и разнообразие
    h2 Эволюция
        h3 Поздний полиозой
        h3 Юрский период
        h3 Меловойский период
        h3 Кайнозойский период
    h2 Внешняя морфология
        h3 Голова
            h4 Рот
        h3 Туловище
            h4 Передгрудь
            h4 Пиероторакс
        h3 Ноги
        h3 Крыла
        h3 Живот
    
------------------------------------------------------------------------------------
    
    Как мы можем семантически разделять контент на странице?
    
   Для реализации семантической разметки HTML предоставляет выделенные теги, которые можно использовать для создания таких разделов, например:

Заголовок: <header>.
Навигационное меню: <nav>.
Основное содержимое: <main>, с различными подразделами содержимого, представленными элементами <article>, <section> и <div>.
Боковая панель: <aside>, обычно располагается внутри <main>.
Нижний колонтитул: <footer>.
    
------------------------------------------------------------------------------------
    Необязательные теги в html таблице?
    
В спецификации HTML5 некоторые правила разметки были ослаблены.
В частности, использование элементов <html>, <head> и <body> уже не является обязательным для разметки HTML5
    
    
------------------------------------------------------------------------------------
    
    Проблема адаптации таблицы?
    
Проблема у дизайнера начинается в тот момент, когда таблица из десктопной версии интерфейса адаптируется под мобильные устройства.
Как мы знаем — таблицы могут иметь много столбцов, что влечёт за собой вылеты таблицы за ширину экрана на мобильном устройстве.

Возможные верные решения:
Каждую строку таблицы делать блоком
Горизонтальный скроллинг
    
------------------------------------------------------------------------------------
    Зачем нужно указывать ширину и высоту для картинок?
    
Страница будет отрисовываться в два этапа: первый - после загрузки HTML, второй - после загрузки изображения.
Но это может привести к тому, что после загрузки изображения и вычисления необходимого для его отображения пространства, содержимое, расположенное под ним, "прыгнет" вниз:
    
    
------------------------------------------------------------------------------------
    
    Какие форматы изображений ты знаешь?
    
Формат JPEG (Joint Photographic Experts Group)
Формат GIF (Graphics Interchange Format)
Формат PNG (Portable Network Graphics)
Формат APNG (Animated Portable Network Graphics)
SVG (Scalable Vector Graphics)
Формат BMP (Bitmap Picture)
Формат ICO (Windows icon)
    
------------------------------------------------------------------------------------
    
    Слышал ли ты о webp?
Вместо .png Google рекомендует для изображений использовать формат .webp.
Кстати, этот формат разработан самим гуглом и по возрасту ему уже более 10 лет.
В браузерах Chrome, Opera и Android Browser формат webp полностью поддерживается c 2012 года.

Действительно, формат WEBP делает изображения в 10 раз легче чем PNG, при этом он поддерживает альфа-канал (прозрачный фон)

Проблема использования формата webp заключается в том, что на данный момент он имеет слабую поддержку в браузерах.
------------------------------------------------------------------------------------

    Как мы можем сделать webp с фолбеком?

Создайть скрипт, который будет проверять браузеры пользователей на поддержку WebP.

Систему с резервными вариантами для WebP можно настроить через HTML5-элемент picture. Альтернативные форматы добавляют с помощью элемента source внутри picture. В дополнение нужно оставить и обычный img, он будет использован для браузеров, которые не поддерживают форматы файлов через picture:

<picture>
 <source type="image/webp" srcset="image.webp">
 <source type="image/jpeg" srcset="image.jpg">
 <img src="image.jpg" alt="Изображение">
</picture>
    
------------------------------------------------------------------------------------
    
    
    Как мы можем вставить svg в документ?
    
Первый и самый простой — элемент img прямо в HTML-коде
Второй способ — фоновая картинка в CSS

Третий способ, через object, наконец-то выбивает стекло между страницей и внутренностями SVG-файла. Работают скрипты, взаимодействие, анимация — если они описаны внутри SVG.
Между тегами object можно вставить фолбэк, который покажется, если браузер не говорит на SVG.
------------------------------------------------------------------------------------
    
    
    Приходилось ли использовать iframe?
    
Тег <iframe> создает плавающий фрейм, который находится внутри обычного документа, он позволяет загружать в область заданных размеров любые другие независимые документы.
Разработчики в основном используют тег iframe для встраивания другого HTML-документа в текущий.


Скорее всего, вы пересекались с ним, когда вам нужно было добавить сторонний виджет (например, знаменитую кнопку «Нравится» на Facebook), видео с YouTube, или рекламный раздел на вашем веб-сайте.


Например, приведенный ниже код будет отображать квадрат размером 500px с главной страницей Google:

<iframe src="https://www.google.com/" height="500px" width="500px"></iframe>

------------------------------------------------------------------------------------
    
    Зачем нам столько разных тегов?

Для соблюдения семантики
Семантическая вёрстка — подход к разметке, который опирается не на содержание сайта, а на смысловое предназначение каждого блока и логическую структуру документа
Семантика делает сайт Доступным.
Помогает определению в поисковиках.

------------------------------------------------------------------------------------

    Можем ли мы использовать тег header в нескольких местах?
    
Тег header сам по себе можно использовать только один раз на странице для шапки сайта. Дальше этот тег должен быть частью других тегов, например, тегов article и section. Пример:

<article>
    <header>
        <h2>Заголовок</h2>
        <p>Какой-то текст</h2>
    </header>
</article>
    
------------------------------------------------------------------------------------
    
    В чем различие article и section?
    
section очень похож на div , т.к. используется как контейнер, но он уже имеет особое семантическое значение — объекты, которые располагаются внутри него, объединены общим смыслом.
article — это специальный вид section , который обозначает независимую и самодостаточную часть страницы.
На его месте можно использовать section, но article добавляет больше семантического значения.
Чтобы определиться, какой из элементов выбрать, можно использовать алгоритм:

Будет ли содержимое иметь осмысленное значение само по себе, например, при публикации в RSS-потоке? Если да, то выбираем article
Если части содержимого объединены общим значением, то выбираем section
Наконец, если нет никакого семантического значения, то выбираем div

------------------------------------------------------------------------------------

    Когда нужно использовать кнопки, а когда ссылки?

Кнопка — это функциональный элемент.
Она отвечает за выполнение определённой функции: добавить в корзину, купить, отправить, проголосовать и т. д.

Проблемы возникают, когда внешне кнопка очень похожа на ссылку — текст без плашки, или ссылка напоминает кнопку — текст расположен на фоне прямоугольной плашки.

Если URL-адрес обернуть не <а>, а тегом <button>, то при нажатии пользователя на правую кнопку мыши браузер предложит выполнить действия, которые положены при клике на кнопку.
Адрес нельзя будет открыть в новой вкладке или отправить через контекстное меню

При нажатии пользователем на ссылку правой кнопкой мыши браузер предлагает действия, которые можно совершить именно со ссылкой
Если функциональный элемент обернуть тегом <a>, то при клике правой кнопкой мыши всплывающее окно будет как у ссылки, но оно не будет иметь смысла.
Такая «ссылка» не имеет корректного адреса, а значит открыть, сохранить, копировать её или поделиться ею невозможно.

------------------------------------------------------------------------------------

    В чем разница между тегами b и strong?

Тег <strong> определяет важность отмеченного текста.
Он может использоваться для выделения предупреждений или части документа, которую пользователь должен увидеть раньше остального.

Тег <b> предназначен для выделения текста без придания ему особой важности.
Использовать его нужно только в случае, когда остальные теги выделения не подходят.
Типичный пример — выделение вводного предложения статьи.

------------------------------------------------------------------------------------
    

    Откуда тег b или strong берут свою "жирность"?
    
    
    
------------------------------------------------------------------------------------
    
    Как устроена работа с формами?
    
    
    
------------------------------------------------------------------------------------
    
    
    Можем ли мы не использовать html формы?
    
    
------------------------------------------------------------------------------------

    Как сделать сайт responsive(отзывчивый)

Responsive состоит из следующих техник:

Резиновый макет на основе пропорций (fluid grid)
Основная идея — формула для вычисления пропорций в процентах «target / context = result».

Резиновые изображения (fluid images)
Подстраивают свои размеры под блок родителя.
Основная идея в неочевидном применении свойства { max-width: 100% }.
Изображение с img { max-width: 100% } никогда не вылезет из своего блока-родителя.

Media queries
Нужны для отображения макета, оптимизированного под разрешение, с которого в данный момент этот сайт смотрится.
Это часть стандарта CSS, которая позволяет применять стили на основе информации о разрешении устройства.

Mobile first

Это техника, при которой сайт верстается сначала для устройств с меньшими возможностями, а затем с помощью media queries добавляются возможности и плюшки.
Так глупые браузеры без media queries получат самый простой контент (например, на мобильных телефонах).
А более продвинутые поймут и отрисуют страницу, беря во внимание media queries.

------------------------------------------------------------------------------------
    
    
    Как сделать, чтобы изображения на мобильных грузилась маленькая
    
Оптимизация изображений для мобильных устройств подразумевает:
уменьшение формата;
сжатие размера;
кэширование;
объединение иконок в CSS-спрайты.
    
------------------------------------------------------------------------------------
    
    Когда лучше использовать id а когда class
    
Идентификаторы (id) уникальны. У элемента может быть только один идентификатор.
На странице может присутствовать лишь один элемент с конкретным идентификатором.

Имена классов (class) не являются уникальными.
Один и тот же класс можно назначать множеству элементов.
Элементу может быть назначено несколько классов.

------------------------------------------------------------------------------------
    
    
    Как можно сверстать стрелочку

Применить SVG
Нарисовать в CSS
Использовать спецсимвол
    
    
------------------------------------------------------------------------------------
    
    
    Верстка - про специфичность селекторов

В следующем списке типы селекторов расположены по возрастанию специфичности:

селекторы типов элементов (например, h1) и псевдоэлементов (например, ::before).
селекторы классов (например, .example), селекторы атрибутов (например, [type="radio"]) и псевдоклассов (например, :hover).
селекторы идентификаторов (например, #example).
Универсальный селектор (*), комбинаторы (+, >, ~, ' ') и отрицающий псевдокласс (:not()) не влияют на специфичность. (Однако селекторы, объявленные внутри :not(), влияют)

Стили, объявленные в элементе (например, style="font-weight:bold"), всегда переопределяют любые правила из внешних файлов стилей и, таким образом, их специфичность можно считать наивысшей.

Важное исключение из правил - !important
    
    
------------------------------------------------------------------------------------
    В чем разница между div и span
    
    <span> — это строчный (inline) элемент.
    <div> — это блочный (block) элемент.
    
    Элементы <div> нужно использовать для оформления разделов документа. А элементы <span> — в роли контейнеров для небольших объёмов текста, для изображений и других подобных элементов страниц.
    
    Надо отметить, что нельзя помещать блочные элементы в строчные. Вот пример, в котором показано, кроме прочего, неправильное размещение блочного элемента внутри строчного (это — фрагмент <div>I'm illegal<div>, размещённый внутри элемента <span>)
    
------------------------------------------------------------------------------------
    
    
    Что такое мета-теги?
    
        Мета-теги — это теги, находящиеся в теге страницы <head> и описывающие содержимое страницы. Мета-теги не выводятся на странице. Они имеются лишь в её коде.
    
        Их основная задача заключается в том, чтобы кратко описывать содержимое страниц поисковым системам. Вот пример:
    
        <head>
            <meta charset="UTF-8">
               <meta name="description" content="Description search engines use">
               <meta name="keywords" content="Keywords, of, your, page">
               <meta name="author" content="Me">
               <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <head>

------------------------------------------------------------------------------------
    Для чего нужен doctype?
    
    
    
------------------------------------------------------------------------------------
    Как следует оформлять страницу, содержимое которой может быть на разных языках?
                    

------------------------------------------------------------------------------------

На что необходимо обратить внимание при разработке мультиязычных сайтов?

------------------------------------------------------------------------------------

Для чего нужны атрибуты, начинающиеся с data-?


------------------------------------------------------------------------------------


Представьте HTML5 как открытую веб-платформу. Из каких блоков состоит HTML5?



------------------------------------------------------------------------------------

Объясните разницу между cookie, sessionStorage и localStorage.



------------------------------------------------------------------------------------

Объясните разницу между <script>, <script async> и <script defer>.


------------------------------------------------------------------------------------
Почему хорошей практикой считается располагать <link> для подключения CSS между <head></head>, а <script> для подключения JS ставить перед </body>? Знаете ли вы исключения?


------------------------------------------------------------------------------------

Что такое прогрессивная отрисовка?



------------------------------------------------------------------------------------

Для чего используется атрибут srcset в теге изображения? Опишите процесс, который использует браузер при оценке содержимого этого атрибута.



------------------------------------------------------------------------------------

Приходилось ли вам работать с языками HTML-шаблонизации?




------------------------------------------------------------------------------------


*/